// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: wasmexecutor.proto

package wasmexecutor

import (
	"context"

	"github.com/r27153733/ByteMoeOJ/app/wasmexecclient/pb/wasm"

	"github.com/r27153733/fastgozero/zrpc"
	"google.golang.org/grpc"
)

type (
	WasmExecutionInput    = wasm.WasmExecutionInput
	WasmExecutionOutput   = wasm.WasmExecutionOutput
	WasmExecutionRequest  = wasm.WasmExecutionRequest
	WasmExecutionResponse = wasm.WasmExecutionResponse

	WasmExecutor interface {
		// Executes a Wasm module with the provided inputs and returns the results.
		Execute(ctx context.Context, in *WasmExecutionRequest, opts ...grpc.CallOption) (*WasmExecutionResponse, error)
	}

	defaultWasmExecutor struct {
		cli zrpc.Client
	}
)

func NewWasmExecutor(cli zrpc.Client) WasmExecutor {
	return &defaultWasmExecutor{
		cli: cli,
	}
}

// Executes a Wasm module with the provided inputs and returns the results.
func (m *defaultWasmExecutor) Execute(ctx context.Context, in *WasmExecutionRequest, opts ...grpc.CallOption) (*WasmExecutionResponse, error) {
	client := wasm.NewWasmExecutorClient(m.cli.Conn())
	return client.Execute(ctx, in, opts...)
}
